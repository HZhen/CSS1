<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Layout</title>
	<style type="text/css" media="screen">
		html *{
			padding: 0;
			margin: 0;
		}
		.layout{margin-top: 20px;}
		.layout article div{
			min-height: 100px;
		}
	</style>
</head>
<body>
	<!-- 浮动解决方案 -->
	<section class="layout float">
		<style type="text/css" media="screen">
			.layout.float .left{
				float: left;
				width: 300px;
				background: red;
			}
			.layout.float .right{
				float: right;
				width: 300px;
				background: blue;
			}
			.layout.float .center{
				background: yellow;
			}
		</style>
		<article class="left-right-center">
			<div class="left"></div>
			<div class="right"></div>
			<div class="center">
				<h1>浮动解决方案</h1>
				1.这是三栏布局浮动中间部分
				2.这是三栏布局浮动中间部分
			</div>
		</article>
	</section>

	<!-- 绝对定位解决方案 -->
	<section class="layout absolute">
		<style type="text/css" media="screen">

			.layout.absolute .left-center-right>div{
				position: absolute;
			}
			.layout.absolute .left{
				left: 0px;
				width: 300px;
				background: red;
			}
			.layout.absolute .right{
				right: 0px;
				width: 300px;
				background: blue;
			}
			.layout.absolute .center{
				background: yellow;
				left: 300px;
				right: 300px;
			}
		</style>
		<article class="left-center-right">
			<div class="left"></div>
			<div class="center">
				<h1>绝对定位解决方案</h1>
				1.这是三栏布局绝对定位中间部分
				2.这是三栏布局绝对定位中间部分
			</div>
			<div class="right"></div>
		</article>
	</section>

	<!-- flexbox解决方案 -->
	<section class="layout flexbox">
		<style type="text/css" media="screen">
			.layout.flexbox{
				margin-top:140px;
			}
			.layout.flexbox .left-center-right{
				display: flex;
			}
			.layout.flexbox .left{
				width: 300px;
				background: red;
			}
			.layout.flexbox .center{
				flex: 1;
				background: yellow;
			}
			.layout.flexbox .right{
				width: 300px;
				background: blue;
			}
		</style>
		<article class="left-center-right">
			<div class="left"></div>
			<div class="center">
				<h1>flexbox解决方案</h1>
				1.这是三栏布局flexbox中间部分
				2.这是三栏布局flexbox中间部分
			</div>
			<div class="right"></div>
		</article>
	</section>

	<!-- 表格解决方案 -->
	<section class="layout table">
		<style type="text/css" media="screen">
			.layout.table .left-center-right{
				width: 100%;
				display: table;
				height: 100px;
			}
			.layout.table .left-center-right>div{
				display: table-cell;
			}
			.layout.table .left{
				width: 300px;
				background: red;
			}
			.layout.table .center{
				background: yellow;
			}
			.layout.table .right{
				width: 300px;
				background: blue;
			}
		</style>
		<article class="left-center-right">
			<div class="left"></div>
			<div class="center">
				<h1>table解决方案</h1>
				1.这是三栏布局table中间部分
				2.这是三栏布局table中间部分
			</div>
			<div class="right"></div>
		</article>
	</section>

	<!-- 网格布局解决方案 -->
	<section class="layout grid">
		<style type="text/css" media="screen">
			.layout.grid .left-center-right{
				display: grid;
				width: 100%;
				grid-template-rows: 100px;
				grid-template-columns: 300px auto 300px;
			}
			.layout.grid .left{
				background: red;
			}
			.layout.grid .center{
				background: yellow;
			}
			.layout.grid .right{
				background: blue;
			}
		</style>
		<article class="left-center-right">
			<div class="left"></div>
			<div class="center">
				<h1>网格布局解决方案</h1>
				1.这是三栏布局网格布局中间部分
				2.这是三栏布局网格布局中间部分
			</div>
			<div class="right"></div>
	</section>
</body>
</html>